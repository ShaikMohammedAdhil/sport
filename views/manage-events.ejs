<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Sports Events</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
    <style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    background-color: #f5f5f5;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    padding: 20px;
}

.container {
    background: linear-gradient(145deg, #4c5c6f, #2f3c47);
    border-radius: 12px;
    padding: 40px;
    width: 100%;
    max-width: 800px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
}

.container:hover {
    transform: scale(1.02);
}

h1 {
    text-align: center;
    font-size: 2.4rem;
    color: #fff;
    margin-bottom: 20px;
    font-weight: 600;
    animation: fadeIn 1s ease-out;
}

.events-list {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.event-card {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    justify-content: space-between;
    padding: 20px;
    transition: transform 0.3s ease;
}

.event-card:hover {
    transform: scale(1.05);
}

.event-info {
    flex: 1;
}

.event-info h3 {
    font-size: 1.5rem;
    font-weight: 500;
    color: #333;
}

.event-description {
    font-size: 1rem;
    color: #666;
    margin-top: 10px;
}

.event-date,
.event-venue {
    font-size: 0.9rem;
    color: #555;
    margin-top: 8px;
}

.event-actions {
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: flex-end;
}

.view-registrations-btn {
    background-color: #3498db;
    color: #fff;
    border-radius: 8px;
    padding: 8px 15px;
    cursor: pointer;
    font-size: 1rem;
    text-align: center;
    width: 100%;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.view-registrations-btn:hover {
    background-color: #2980b9;
    transform: scale(1.05);
}

.delete-btn {
    background-color: #e74c3c;
    color: #fff;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.delete-btn:hover {
    background-color: #c0392b;
    transform: scale(1.1);
}

.icon {
    font-size: 1.5rem;
}

.registrations-list {
    background-color: #ecf0f1;
    border-radius: 8px;
    margin-top: 10px;
    padding: 10px;
    display: none;
    transition: max-height 0.3s ease-in-out;
    max-height: 0;
    overflow: hidden;
}

.registrations-list ul {
    list-style-type: none;
}

.registrations-list ul li {
    font-size: 1rem;
    color: #333;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
        transform: translateY(-20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}
.create-event-btn {
            background-color: #28a745;
            color: #fff;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            width: 200px;
            text-align: center;
            margin: 20px 0;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

        .create-event-btn:hover {
            background-color: #218838;
            transform: scale(1.05);
        }

        /* Style for the create event form */
        .create-event-form {
            display: none;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .create-event-form input,
        .create-event-form textarea {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 6px;
            border: 1px solid #ccc;
        }

        .create-event-form button {
            background-color: #3498db;
            color: white;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            border: none;
        }

        .create-event-form button:hover {
            background-color: #2980b9;
        }

        /* Event card styling */
        .event-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 20px;
        }

        .event-actions button {
            background-color: #3498db;
            color: white;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
        }

        .event-actions button:hover {
            background-color: #2980b9;
        }

        .registrations-list {
            margin-top: 20px;
            background-color: #f9f9f9;
            padding: 10px;
            border-radius: 6px;
        }
      
      
  </style>
</head>
<body>
    <div class="container">
        <h1>Manage Sports Events</h1>

        <!-- Button to show/hide create event form -->
        <button class="create-event-btn" onclick="toggleCreateEventForm()">Create Event</button>

        <!-- Create Event Form -->
        <div id="create-event-form" class="create-event-form">
            <h3>Create New Event</h3>
            <form id="create-event" action="/create-event" method="POST">
                <input type="text" name="name" placeholder="Event Name" required>
                <textarea name="description" placeholder="Event Description" required></textarea>
                <input type="date" name="date" required>
                <input type="text" name="venue" placeholder="Event Venue" required>
                <button type="submit">Create Event</button>
            </form>
        </div>

        <div class="events-list">
            <% events.forEach(event => { %>
            <div class="event-card">
                <div class="event-info">
                    <h3><%= event.name %></h3>
                    <p class="event-description"><%= event.description %></p>
                    <p class="event-date">Date: <%= event.date %></p>
                    <p class="event-venue">Venue: <%= event.venue %></p>
                </div>
                <div class="event-actions">
                    <!-- Delete Event -->
                    <form action="/delete-event/<%= event._id %>" method="POST" style="display: inline;">
                        <button type="submit" class="delete-btn" onclick="return confirm('Are you sure you want to delete this event?')">
                            <span class="icon">&#10006;</span> <!-- Delete icon -->
                        </button>
                    </form>

                    <!-- Edit Event -->
                    <button class="edit-btn" onclick="editEvent('<%= event._id %>', '<%= event.name %>', '<%= event.description %>', '<%= event.date %>', '<%= event.venue %>')">
                        <span class="icon">&#9998;</span> Edit
                    </button>

                    <!-- View Registrations -->
                    <div class="view-registrations-btn" onclick="toggleRegistrations(this)">
                        <span class="icon">&#128065;</span> View Registrations
                    </div>
                </div>
            </div>
            <% }) %>
        </div>
    </div>

    <script>
        // Toggle create event form
        function toggleCreateEventForm() {
            const form = document.getElementById('create-event-form');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        // Edit event functionality
        function editEvent(eventId, name, description, date, venue) {
            const newName = prompt("Edit Event Name:", name);
            const newDescription = prompt("Edit Event Description:", description);
            const newDate = prompt("Edit Event Date:", date);
            const newVenue = prompt("Edit Event Venue:", venue);

            if (newName && newDescription && newDate && newVenue) {
                const updatedEvent = {
                    name: newName,
                    description: newDescription,
                    date: newDate,
                    venue: newVenue
                };

                fetch(`/edit-event/${eventId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedEvent)
                })
                .then(response => response.json())
                .then(data => {
                    alert("Event updated successfully!");
                    window.location.reload();
                })
                .catch(error => {
                    alert("Error updating event");
                });
            }
        }

        // Toggle registration list visibility
        function toggleRegistrations(viewBtn) {
            const registrationsList = viewBtn.closest('.event-card').querySelector('.registrations-list');
            registrationsList.style.display = registrationsList.style.display === "none" ? "block" : "none";
        }
    </script>
</body>
</html>
